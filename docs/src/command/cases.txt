? In this example there's only one command and it is required, so is the argument inside of it
> cmd --arg 42
OK
Options { flag: false, cmd: Cmd { flag: false, arg: 42 } }

? If you don't specify this command - parsing will fail
>
Stderr
Expected COMMAND ..., pass --help for usage information

? You can have the same flag names inside and outside of the command, but it might be confusing
? for the end user. This example enables the outer flag
> --flag cmd --arg 42
OK
Options { flag: true, cmd: Cmd { flag: false, arg: 42 } }

? And this one - both inside and outside
> --flag cmd --arg 42 --flag
OK
Options { flag: true, cmd: Cmd { flag: true, arg: 42 } }

? And that's the confusing part - unless you add context restrictions with
? [`adjacent`](crate::ParseCon::adjacent) and parse command first - outer flag wins.
? So it's best not to mix names on different levels
> cmd --arg 42 --flag
OK
Options { flag: true, cmd: Cmd { flag: false, arg: 42 } }

? Commands show up on both outer level help
> --help
Stdout
Usage: [--flag] COMMAND ...

Available options:
        --flag  This flag is specific to the outer layer
    -h, --help  Prints help information

Available commands:
    cmd  Command to do something

? As well as showing their own help
> cmd --help
Stdout
Command to do something

Usage: [--flag] --arg ARG

Available options:
        --flag       This flag is specific to command
        --arg <ARG>
    -h, --help       Prints help information
